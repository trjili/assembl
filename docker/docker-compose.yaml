version: "3"

networks:
  my_net:

volumes:
  assembl_static:

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.2.2
    networks:
      - my_net
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 1g
    ports:
      - 9200:9200

  redis:
    image: redis:3.0-alpine
    networks:
      - my_net

  memcached:
    image: memcached:1.4-alpine
    networks:
      - my_net

  database:
    image: postgres:9.5.5-alpine
    networks:
      - my_net

  web:
    image: nginx:1.12-alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx_config_docker:/opt/default_config
      - assembl_static:/opt/assembl_static
    environment:
      ASSEMBL_HOST: assembl1
      PUBLIC_HOSTNAME: assemlbl1.local
      http_upgrade: '$http_upgrade'
    depends_on:
      - assembl1
    command: /bin/sh -c "sed -e 's/ASSEMBL_HOST/assembl1/; s/PUBLIC_HOSTNAME/assemlbl1.local/;' < /opt/default_config/default > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    networks:
      - my_net

  assembl1:
    image: assembl:latest
    ports:
      - "8090:8090"
    volumes:
      - ../var/docker/stack1:/var/docker_data
      - assembl_static:/opt/assembl_static
    environment:
      DOCKER_RC: /var/docker_data/assembl1.rc
      BUILDING_DOCKER: "false"
    depends_on:
      - redis
      - memcached
      - database
    command: sh -c 'cd /opt/assembl; /etc/init.d/ssh start ; . venv/bin/activate ; env BUILDING_DOCKER=false fab -c /var/docker_data/assembl1.rc docker_startup ; tail -f /dev/null'
    networks:
      - my_net
